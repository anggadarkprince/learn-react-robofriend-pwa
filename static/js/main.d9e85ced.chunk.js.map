{"version":3,"sources":["components/SearchBox.js","components/Card.js","components/CardList.js","components/Scroll.js","components/ErrorBoundary.js","components/CounterButton.js","components/Header.js","containers/App.js","action.js","constant.js","registerServiceWorker.js","reducers.js","index.js"],"names":["SearchBox","_ref","searchChange","react_default","a","createElement","className","aria-label","type","placeholder","onChange","Card","name","email","id","alt","src","concat","CardList","robots","map","robot","index","components_Card","key","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","CounterButton","updateCount","count","nextProps","nextState","color","onClick","Header","components_CounterButton","App","onRequestRobots","_this$props","searchField","onSearchChange","isPending","filteredRobots","filter","toLowerCase","includes","components_Header","components_SearchBox","components_Scroll","components_ErrorBoundary","components_CardList","connect","searchRobots","requestRobots","dispatch","event","payload","target","value","fetch","then","response","json","users","catch","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","initialStateSearch","initialStateRobots","logger","createLogger","rootReducer","combineReducers","arguments","length","undefined","action","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_containers_App","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d9e85ced.chunk.js","sourcesContent":["import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n    return (\n        <div className='pa2'>\n            <input aria-label='Search robot'\n                className='pa3 ba b--green bg-lightest-blue'\n                   type='search' placeholder='search robots' onChange={searchChange}/>\n        </div>\n    )\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Card = ({name, email, id}) => {\n    return (\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='robots' src={`https://robohash.org/${id}?size=200x200`}/>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React from 'react'\nimport Card from \"./Card\";\n\nconst CardList = ({robots}) => {\n    return (\n        <div>\n            {\n                robots.map((robot, index) => {\n                    return <Card key={index} id={robot.id} name={robot.name} email={robot.email}/>\n                })\n            }\n        </div>\n    )\n}\n\nexport default CardList;","import React from 'react'\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '4px solid black', height: '500px'}}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({hasError: true});\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>Ooops, that is not good.</h1>\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import React, {Component} from 'react'\n\nclass CounterButton extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            count: 0\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if(this.state.count !== nextState) {\n            return true;\n        }\n        return false;\n    }\n\n    updateCount = () => {\n        this.setState(state => {\n            return {count: state.count + 1}\n        })\n    };\n\n    render() {\n        return (\n            <button color={this.props.color} onClick={this.updateCount}>\n                Count: {this.state.count}\n            </button>\n        )\n    }\n}\n\nexport default CounterButton;","import React, {Component} from 'react'\nimport CounterButton from \"./CounterButton\";\n\nclass Header extends Component {\n\n    render() {\n        return (\n            <div>\n                <h1 className='f1'>RoboFriends</h1>\n                <CounterButton color={'red'}/>\n            </div>\n        )\n    }\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport SearchBox from '../components/SearchBox';\nimport CardList from \"../components/CardList\";\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundary from \"../components/ErrorBoundary\";\nimport './App.css';\n\nimport {setSearchField, requestRobots} from \"../action\";\nimport Header from \"../components/Header\";\n\nconst mapStateToProps = state => {\n    return {\n        searchField: state.searchRobots.searchField,\n        robots: state.requestRobots.robots,\n        isPending: state.requestRobots.isPending,\n        error: state.requestRobots.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n        onRequestRobots: () => requestRobots(dispatch)\n    };\n}\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.onRequestRobots()\n    }\n\n    render() {\n        const {searchField, onSearchChange, robots, isPending} = this.props;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\n        });\n\n        if (isPending) {\n            return <h1 className='pa3 tc'>Loading</h1>\n        }\n\n        return (\n            <div className='tc'>\n                <Header/>\n                <SearchBox searchChange={onSearchChange}/>\n                <Scroll>\n                    <ErrorBoundary>\n                        <CardList robots={filteredRobots}/>\n                    </ErrorBoundary>\n                </Scroll>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import {\n    CHANGE_SEARCH_FIELD,\n    REQUEST_ROBOTS_PENDING,\n    REQUEST_ROBOTS_SUCCESS,\n    REQUEST_ROBOTS_FAILED,\n} from \"./constant\";\n\nexport const setSearchField = (text) => {\n    return {\n        type: CHANGE_SEARCH_FIELD,\n        payload: text\n    };\n};\n\nexport const requestRobots = (dispatch) => {\n    dispatch({type: REQUEST_ROBOTS_PENDING});\n    fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => dispatch({type: REQUEST_ROBOTS_SUCCESS, payload: users}))\n        .catch(error => dispatch({type: REQUEST_ROBOTS_FAILED, payload: error}));\n}","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    CHANGE_SEARCH_FIELD,\n    REQUEST_ROBOTS_PENDING,\n    REQUEST_ROBOTS_SUCCESS,\n    REQUEST_ROBOTS_FAILED,\n} from \"./constant\";\n\nconst initialStateSearch = {\n    searchField: '',\n};\n\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n    switch (action.type) {\n        case CHANGE_SEARCH_FIELD:\n            return Object.assign({}, state, {searchField: action.payload});\n        default:\n            return state;\n    }\n};\n\n\nconst initialStateRobots = {\n    isPending: false,\n    robots: [],\n    error: '',\n};\n\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\n    switch (action.type) {\n        case REQUEST_ROBOTS_PENDING:\n            return Object.assign({}, state, {isPending: true});\n        case REQUEST_ROBOTS_SUCCESS:\n            return Object.assign({}, state, {isPending: false, robots: action.payload});\n        case REQUEST_ROBOTS_FAILED:\n            return Object.assign({}, state, {isPending: false, error: action.payload});\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, combineReducers} from 'redux';\nimport {createLogger} from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './containers/App'\nimport registerServiceWorker from './registerServiceWorker';\nimport 'tachyons';\nimport {searchRobots, requestRobots} from \"./reducers\";\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({searchRobots, requestRobots});\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}